{"ast":null,"code":"import _assertThisInitialized from \"/Users/chu/Documents/workspace/07_codeTest/code_test/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _toConsumableArray from \"/Users/chu/Documents/workspace/07_codeTest/code_test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/chu/Documents/workspace/07_codeTest/code_test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chu/Documents/workspace/07_codeTest/code_test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chu/Documents/workspace/07_codeTest/code_test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chu/Documents/workspace/07_codeTest/code_test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chu/Documents/workspace/07_codeTest/code_test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chu/Documents/workspace/07_codeTest/code_test/src/HomePage/menu.js\";\nimport React, { Component } from 'react';\n/* Pagination Component \n-------------------------------------------------*/\n\nvar propTypes = {\n  // items: React.PropTypes.array.isRequired,\n  // onChangePage: React.PropTypes.func.isRequired,\n  // initialPage: React.PropTypes.number    \n  items: 1,\n  onChangePage: 1,\n  initialPage: 1\n};\nvar defaultProps = {\n  initialPage: 1\n};\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));\n    _this.state = {\n      pager: {}\n    };\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // set page if items array isn't empty\n      if (this.props.items && this.props.items.length) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // reset page if items array has changed\n      if (this.props.items !== prevProps.items) {\n        this.setPage(this.props.initialPage);\n      }\n    }\n  }, {\n    key: \"createPage\",\n    value: function createPage(page) {\n      var items = this.props.items;\n      var pager = this.state.pager;\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(page) {\n      var items = this.props.items;\n      var pager = this.state.pager;\n\n      if (page < 1 || page > pager.totalPages) {\n        return;\n      } // get new pager object for specified page\n\n\n      pager = this.getPager(items.length, page); // get new page of items from items array\n\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1); // update state\n\n      this.setState({\n        pager: pager\n      }); // call change page function in parent component\n\n      this.props.onChangePage(pageOfItems);\n    }\n  }, {\n    key: \"getPager\",\n    value: function getPager(totalItems, currentPage, pageSize) {\n      // default to first page\n      currentPage = currentPage || 1; // default page size is 10\n\n      pageSize = pageSize || 2; // calculate total pages\n\n      var totalPages = Math.ceil(totalItems / pageSize);\n      var startPage, endPage;\n\n      if (totalPages <= 10) {\n        // less than 10 total pages so show all\n        startPage = 1;\n        endPage = totalPages;\n      } else {\n        // more than 10 total pages so calculate start and end pages\n        if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n        } else if (currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n        } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n        }\n      } // calculate start and end item indexes\n\n\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n      var pages = _toConsumableArray(Array(endPage + 1 - startPage).keys()).map(function (i) {\n        return startPage + i;\n      }); // return object with all pager properties required by the view\n\n\n      return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pager = this.state.pager;\n\n      if (!pager.pages || pager.pages.length <= 1) {\n        // don't display pager if there is only 1 page\n        return null;\n      }\n\n      return React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, pager.pages.map(function (page, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          className: pager.currentPage === page ? 'active' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick() {\n            return _this2.setPage(page);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, page));\n      }), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\n\nvar MenuPage =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(MenuPage, _React$Component2);\n\n  function MenuPage() {\n    _classCallCheck(this, MenuPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MenuPage).apply(this, arguments));\n  }\n\n  _createClass(MenuPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.state.pageOfItems.map(function (item) {\n        return React.createElement(\"div\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, item.name);\n      }), React.createElement(Pagination, {\n        items: this.state.exampleItems,\n        onChangePage: this.onChangePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this3.createPage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Create New\"));\n    }\n  }]);\n\n  return MenuPage;\n}(React.Component);\n/*Menu Component \n-------------------------------------------------*/\n\n\nvar Menu =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Menu, _React$Component3);\n\n  function Menu() {\n    var _this4;\n\n    _classCallCheck(this, Menu);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Menu).call(this)); // an example array of items to be paged\n\n    var exampleItems = _toConsumableArray(Array(5).keys()).map(function (i) {\n      return {\n        id: i + 1,\n        name: 'Item ' + (i + 1)\n      };\n    });\n\n    _this4.state = {\n      exampleItems: exampleItems,\n      pageOfItems: []\n    }; // bind function in constructor instead of render (https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md)\n\n    _this4.onChangePage = _this4.onChangePage.bind(_assertThisInitialized(_assertThisInitialized(_this4)));\n    return _this4;\n  }\n\n  _createClass(Menu, [{\n    key: \"onChangePage\",\n    value: function onChangePage(pageOfItems) {\n      // update state with new page of items\n      this.setState({\n        pageOfItems: pageOfItems\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(MenuPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nexport default Menu;","map":{"version":3,"sources":["/Users/chu/Documents/workspace/07_codeTest/code_test/src/HomePage/menu.js"],"names":["React","Component","propTypes","items","onChangePage","initialPage","defaultProps","Pagination","props","state","pager","length","setPage","prevProps","prevState","page","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","totalItems","currentPage","pageSize","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","index","MenuPage","item","id","name","exampleItems","createPage","Menu","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n/* Pagination Component \n-------------------------------------------------*/\n\nconst propTypes = {\n    // items: React.PropTypes.array.isRequired,\n    // onChangePage: React.PropTypes.func.isRequired,\n    // initialPage: React.PropTypes.number    \n    items: 1,\n    onChangePage: 1,\n    initialPage: 1 \n}\n\nconst defaultProps = {\n    initialPage: 1\n}\n\nclass Pagination extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { pager: {} };\n    }\n\n    componentWillMount() {\n        // set page if items array isn't empty\n        if (this.props.items && this.props.items.length) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // reset page if items array has changed\n        if (this.props.items !== prevProps.items) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    createPage(page){\n        var items = this.props.items;\n        var pager = this.state.pager;\n    }\n\n    setPage(page) {\n        var items = this.props.items;\n        var pager = this.state.pager;\n\n        if (page < 1 || page > pager.totalPages) {\n            return;\n        }\n\n        // get new pager object for specified page\n        pager = this.getPager(items.length, page);\n\n        // get new page of items from items array\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n        // update state\n        this.setState({ pager: pager });\n\n        // call change page function in parent component\n        this.props.onChangePage(pageOfItems);\n    }\n\n    getPager(totalItems, currentPage, pageSize) {\n        // default to first page\n        currentPage = currentPage || 1;\n\n        // default page size is 10\n        pageSize = pageSize || 2;\n\n        // calculate total pages\n        var totalPages = Math.ceil(totalItems / pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n\n    render() {\n        var pager = this.state.pager;\n\n        if (!pager.pages || pager.pages.length <= 1) {\n            // don't display pager if there is only 1 page\n            return null;\n        }\n\n        return (\n            <ul className=\"pagination\">\n             \n                {pager.pages.map((page, index) =>\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''}>\n                        <a onClick={() => this.setPage(page)}>{page}</a>\n                    </li>\n                   \n                )}\n                     <li> \n                       \n                    </li>\n            </ul>\n        );\n    }\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\n\n\nclass MenuPage extends React.Component {\n\n\n    render(){\n        <div>\n\n        {this.state.pageOfItems.map(item =>\n            <div key={item.id}>{item.name}</div>\n        )}\n        <Pagination items={this.state.exampleItems} onChangePage={this.onChangePage} />\n\n        <a onClick={() => this.createPage( )}>Create New</a>\n</div>\n    }\n\n\n}\n\n/*Menu Component \n-------------------------------------------------*/\n\nclass Menu extends React.Component {\n    constructor() {\n        super();\n\n        // an example array of items to be paged\n        var exampleItems = [...Array(5).keys()].map(i => ({ id: (i+1), name: 'Item ' + (i+1) }));\n\n        this.state = {\n            exampleItems: exampleItems,\n            pageOfItems: []\n        };\n\n        // bind function in constructor instead of render (https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md)\n        this.onChangePage = this.onChangePage.bind(this);\n    }\n\n    onChangePage(pageOfItems) {\n        // update state with new page of items\n        this.setState({ pageOfItems: pageOfItems });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"text-center\">\n\n\n                    <MenuPage></MenuPage>\n\n\n\n                       \n                    </div>\n                </div>\n                <hr />\n                 \n            </div>\n        );\n    }\n}\n\n\nexport default Menu ;\n\n"]},"metadata":{},"sourceType":"module"}